<?php

/**
 * Implemente hook_menu
 */
 
define('SUBJECTS_URL', 'http://subjects.kmaps.virginia.edu');
define('PLACES_URL', 'http://places.kmaps.virginia.edu');

function kmaps_explorer_menu() {
	$items = array();

  $items['kmaps/template'] = array(
    'title' => 'Kmaps Content Template',
    'description' => 'Return the html for the display of a KMap feature',
    'page callback' => 'kmaps_explorer_get_template',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_ACTION,
  );

  $items['subjects'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a page that shows the initial landing content of the subjects app.',
    'page callback' => 'kmaps_explorer_subjects_landing',
    'page arguments' => array('subjects'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
  );

  $items['subjects/%/overview/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows overview in subjects via ajax',
    'page callback' => 'kmaps_explorer_overview',
    'page arguments' => array(3, 1, 'subjects'),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['places'] = array(
    'title' => 'Places',
    'description' => 'Creates a page that shows the initial landing content of the places app.',
    'page callback' => 'kmaps_explorer_places_landing',
    'page arguments' => array('places'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
  );

  $items['places/%/overview/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows overview in places via ajax',
    'page callback' => 'kmaps_explorer_overview',
    'page arguments' => array(3, 1, 'places'),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/subjects/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows subjects in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_subjects',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['places/%/subjects/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows subjects in places via ajax',
    'page callback' => 'kmaps_explorer_places_subjects',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/essays/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows essays in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_essays',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['places/%/essays/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows essays in places via ajax',
    'page callback' => 'kmaps_explorer_places_essays',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/places/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows places in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_places',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['places/%/places/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows places in places via ajax',
    'page callback' => 'kmaps_explorer_places_places',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/photos/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows photos in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_photos',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/texts/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows texts in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_texts',
    'page arguments' => array(3, 1),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['subjects/%/audio-video/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows audio-video in subjects via ajax',
    'page callback' => 'kmaps_explorer_subjects_audio_video',
    'page arguments' => array(3, 1, 'subject'),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['places/%/audio-video/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows audio-video in places via ajax',
    'page callback' => 'kmaps_explorer_subjects_audio_video', //using same function as in subjects.
    'page arguments' => array(3, 1, 'place'),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

  $items['audio-video/node/%/%'] = array(
    'title' => 'Subjects',
    'description' => 'Creates a callback that shows individual audio-video nodes',
    'page callback' => 'kmaps_explorer_audio_video_node', //using same function for both places and subjects.
    'page arguments' => array(3, 2),
    'access arguments' => TRUE,
    'access callback' => TRUE,
  );

	return $items;
}

function kmaps_explorer_get_template() {
	$location = drupal_get_path('module', 'shanti_kmaps');
	$tmpl = file_get_contents($location . '/templates/kmaps-explorer-page.tpl.php');
	$json = array(
		'template' => $tmpl,
	);
	drupal_json_output($json);
}

/**
 * Kmap Tree Navigation Block functions
 */

/**
 * Implements hook_block_info
 */
function kmaps_explorer_block_info() {
	$blocks = array();
	$blocks['kmaps_tree_block'] = array(
		'info' => t('KMaps Navigation Tree'),
	 );
	return $blocks;
}

/**
 * Implements hook_block_view
 */
function kmaps_explorer_block_view($delta='') {
	$block = array();

	switch($delta) {
		case 'kmaps_tree_block':
			$block['content'] = array(
				'#theme' => 'kmaps_explorer_tree_block',
				'#trees' => array('Places', 'Subjects'),
			);
			break;
	}

	return $block;
}

/**
 * Function for creating kmaps tree block content. Only returns the empty div. Content supplied through JS Ajax calls.
 */
function kmaps_explorer_block_content() {
  return '<div id="kmaps-trees" class="view-wrap">
  					<div id="km-places-tree">
  						<h2>Places</h2><div class="tree"></div>
  					</div>
  					<div id="km-subjects-tree">
  						<h2>Subjects</h2><div class="tree"></div>
  					</div>
  				</div>';
}

/**
 * Gets current js declaration string and searches for js name in it. Returns TRUE if found; FALSE if not.
 */
function _is_js_loaded($jsname) {
	$jsloaded = drupal_get_js();
	if(strpos($jsloaded, $jsname) > -1) {
		return TRUE;
	} else {
		return FALSE;
	}
}

 
/**
 * Implements hook_theme().
 */
function kmaps_explorer_theme() {
  return array(
    'kmaps_explorer_tree_block' => array(
      'variables' => array('block' => NULL, 'trees' => NUll),
    ),
    'kmaps_explorer_initial_template' => array(
      'template' => 'kmaps-explorer-page',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates',
    ),
    'kmaps_explorer_subjects_overview_image' => array(
      'template' => 'kmaps-explorer-subjects-overview-image',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_subjects_subjects_ajax' => array(
      'template' => 'kmaps-explorer-subjects-subjects',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_subjects_essays_ajax' => array(
      'template' => 'kmaps-explorer-subjects-essays',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_subjects_places_ajax' => array(
      'template' => 'kmaps-explorer-subjects-places',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_pagination_template' => array(
      'template' => 'kmaps-explorer-pagination',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates',
    ),
    'kmaps_explorer_subjects_photos_ajax' => array(
      'template' => 'kmaps-explorer-subjects-photos',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_subjects_texts_ajax' => array(
      'template' => 'kmaps-explorer-subjects-texts',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_subjects_audio_video_ajax' => array(
      'template' => 'kmaps-explorer-subjects-audio-video',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_places_overview_image' => array(
      'template' => 'kmaps-explorer-places-overview-image',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_subjects_landing' => array(
      'template' => 'kmaps-explorer-subjects-landing-page',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/subjects',
    ),
    'kmaps_explorer_places_landing' => array(
      'template' => 'kmaps-explorer-places-landing-page',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_places_overview_names' => array(
      'template' => 'kmaps-explorer-places-overview-names',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_places_overview_etymology' => array(
      'template' => 'kmaps-explorer-places-overview-etymology',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_places_places_ajax' => array(
      'template' => 'kmaps-explorer-places-places',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_places_essays_ajax' => array(
      'template' => 'kmaps-explorer-places-essays',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
    'kmaps_explorer_places_subjects_ajax' => array(
      'template' => 'kmaps-explorer-places-subjects',
      'arguments' => array(),
      'path' => drupal_get_path('module', 'kmaps_explorer') . '/templates/places',
    ),
  );
}

function theme_kmaps_explorer_tree_block($variables) {
	$html = '<div id="kmaps-tree-block" class="view-wrap">';
	foreach($variables['trees'] as $tree) {
		$lctree = strtolower($tree);
		$html .= "<div id=\"km-{$lctree}-tree\">
  						<h2>{$tree}</h2><div class=\"tree\"></div>
  					</div>";
	}
  $html .= '</div>';
	//dpm($html, 'in tsktb hey');
	return $html;
}

/**
 * Function to create the landing page for subjects
 */
function kmaps_explorer_subjects_landing($type) {
  //css and js files to include in pages
  $path = drupal_get_path('module', 'kmaps_explorer');

  $options = array(
    'group' => CSS_THEME,
  );

  drupal_add_css('//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css', 'external');
  drupal_add_css($path . '/css/jquery.bxslider.css', $options);

  $options = array(
    'group' => JS_DEFAULT,
    'scope' => 'footer',
  );

  drupal_add_js($path . '/js/jquery.bxslider-rahisified.js', $options);
  drupal_add_js($path . '/js/bxsliderInit.js', $options);

  return theme('kmaps_explorer_subjects_landing', array(
    'path' => $path . '/images',
  ));
}

/**
 * Function to create the landing page for places
 */
function kmaps_explorer_places_landing($type) {
  //css and js files to include in pages
  $path = drupal_get_path('module', 'kmaps_explorer');

  $options = array(
    'group' => CSS_THEME,
  );

  drupal_add_css('//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css', 'external');
  drupal_add_css($path . '/css/jquery.bxslider.css', $options);

  $options = array(
    'group' => JS_DEFAULT,
    'scope' => 'footer',
  );

  drupal_add_js($path . '/js/jquery.bxslider-rahisified.js', $options);
  drupal_add_js($path . '/js/bxsliderInit.js', $options);

  return theme('kmaps_explorer_places_landing', array(
    'path' => $path . '/images',
  ));
}

/**
 * Function to create the overview page for subjects and places
 */
function kmaps_explorer_overview($type = 'ajax', $id, $app) {
  //css and js files to include in pages
  $path = drupal_get_path('module', 'kmaps_explorer');

  $options = array(
    'group' => CSS_THEME,
  );

  //drupal_add_css($path . '/css/bootstrap.min.css', $options);
  //drupal_add_css($path . '/css/bootstrap-theme.min.css', $options);
  drupal_add_css($path . '/css/kmaps_explorer.css', $options);

  if ($app === 'places') {
    drupal_add_css($path . '/css/places.css', $options);
    drupal_add_css($path . '/css/openlayers.css', $options);
  }

  $options = array(
    'group' => JS_DEFAULT,
    'scope' => 'footer'
  );

  //drupal_add_js($path . '/js/vendor/bootstrap.min.js', $options);

  if ($app === 'places') {
    drupal_add_js('//maps.googleapis.com/maps/api/js?key=AIzaSyAXpnXkPS39-Bo5ovHQWvyIk6eMgcvc1q4&amp;sensor=false', 'external');
    drupal_add_js('http://openlayers.org/api/OpenLayers.js', 'external');
    drupal_add_js('http://www.thlib.org/places/maps/interactive/scripts/THLWMS.js', 'external');
    drupal_add_js($path . '/js/inset-map.js', $options);
  }

  drupal_add_library('system', 'drupal.ajax');

  //Create the url for related assets for subjects and places
  $mURL = "http://" . $app . ".kmaps.virginia.edu/features/" . $id . ".json";

  //Create the url for the solr related assets for subjects and places
  $solrURL = 'http://kidx.shanti.virginia.edu/solr/kmindex/select?q=kmapid:' . $app . '-' . $id . '&fq=&start=0&facets=on&group=true&group.field=service&group.facet=true&group.ngroups=true&group.limit=0&wt=json';

  //Get related data
  $json = file_get_contents($mURL);
  $obj = json_decode($json);
  //dpm($obj);

  //Store the title of this node for other functions to use
  variable_set('kmaps_explorer_node_title', $obj->feature->header);

  //Get solr data
  $solrJSON = file_get_contents($solrURL);
  $solrObj = json_decode($solrJSON);

  $video_count = 0;

  foreach ($solrObj->grouped->service->groups as $solrKey => $solrValue) {
    if ($solrValue->groupValue == "mediabase" && $solrValue->doclist->numFound > 0) {
      $video_count = $solrValue->doclist->numFound;
    }
  }

  //test information for subpages
  // $mid = 20;
  // $app = 'subject';
  // $avURL = 'http://mediabase.drupal-dev.shanti.virginia.edu/services/' . $app . '/' . $id . '?rows=12&pg=3';
  // $avObj = json_decode(file_get_contents($avURL));
  // dpm($avObj);
  
  //Places Overview setup
  if ($app == 'places') {
    if (count($obj->feature->illustrations) > 0 && $obj->feature->illustrations[0]->type =='mms') {
      $placesOverviewImageOBJ = json_decode(file_get_contents($obj->feature->illustrations[0]->url));
      $placesOverviewImage = theme('kmaps_explorer_places_overview_image', array(
        'url' => $placesOverviewImageOBJ->picture->images[3]->url,
      ));
    } else if (count($obj->feature->illustrations) > 0 && $obj->feature->illustrations[0]->type =='external') {
      $placesOverviewImage = theme('kmaps_explorer_places_overview_image', array(
        'url' => $obj->feature->illustrations[0]->url,
      ));
    }

    //Accordion setup
    $accordionURL = "http://places.kmaps.virginia.edu/features/" . $id . "/names.json";
    $accordionOBJ = json_decode(file_get_contents($accordionURL));
    //dpm($accordionOBJ);
    $accordionName = theme('kmaps_explorer_places_overview_names', array(
      'data' => $accordionOBJ,
    ));

    $etymology = search_etymology($accordionOBJ->names);
    if($etymology) {
      $accordionEtymology = theme('kmaps_explorer_places_overview_etymology', array(
        'etymology' => $etymology,
      ));
    }
  }

  //Call to return the html for the main page template passing in all the variables.
  $content = theme('kmaps_explorer_initial_template', array(
    'type' => $app,
    'kid' => $id,
    'obj' => $obj,
    'reverse_type' => $app == 'subjects' ? 'places' : 'subjects',
    'video_count' => $video_count,
    'places_overview_image' => isset($placesOverviewImage) ? $placesOverviewImage : '',
    'ajax' => $type == 'ajax' ? TRUE : FALSE,
    'accordionName' => isset($accordionName) ? $accordionName : '',
    'accordionEtymology' => isset($accordionEtymology) ? $accordionEtymology : '',
  ));

  if($type == 'ajax') {
    $commands = array();
    $commands[] = ajax_command_html('#' . $app . '-main', $content);
    $commands[] = ajax_command_html('.page-title span', $obj->feature->header);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return $content;
  }
}

/**
 * Function to create the ajax content for subjects in subjects
 */
function kmaps_explorer_subjects_subjects($type = 'ajax', $id) {
  if($type == 'ajax') {
    $subjectsURL = "http://subjects.kmaps.virginia.edu/features/" . $id . "/related.json";
    $subjObj = json_decode(file_get_contents($subjectsURL));

    //Retrieve the title of the node
    $title = variable_get('kmaps_explorer_node_title', '');

    $output = theme('kmaps_explorer_subjects_subjects_ajax', array(
      'data' => $subjObj,
      'title' => $title,
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create the ajax content for subjects in places
 */
function kmaps_explorer_places_subjects($type = 'ajax', $id) {
  if($type == 'ajax') {
    $subjectsURL = "http://places.kmaps.virginia.edu/features/" . $id . "/topics.json";
    $subjObj = json_decode(file_get_contents($subjectsURL));

    //Retrieve the title of the node
    $title = variable_get('kmaps_explorer_node_title', '');

    $output = theme('kmaps_explorer_places_subjects_ajax', array(
      'data' => $subjObj,
      'title' => $title,
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create the ajax content for essays in subjects
 */
function kmaps_explorer_subjects_essays($type = 'ajax', $id) {
  if($type == 'ajax') {
    $essaysURL = "http://subjects.kmaps.virginia.edu/features/" . $id . "/descriptions.json";
    $essayObj = json_decode(file_get_contents($essaysURL));
    $output = theme('kmaps_explorer_places_essays_ajax', array('data' => $essayObj));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create the ajax content for esssays in places
 */
function kmaps_explorer_places_essays($type = 'ajax', $id, $textId) {
  if($type == 'ajax') {
    if($id == 13740) {
      $essayURL = 'http://essays.drupal-dev.shanti.virginia.edu/shanti_essays/node_ajax/137';
      $output = file_get_contents($essayURL);
    } else {
      $essayURL = "http://places.kmaps.virginia.edu/features/" . $id . "/descriptions/" . $textId . ".json";
      $essayObj = json_decode(file_get_contents($essayURL));
      $output = theme('kmaps_explorer_places_essays_ajax', array('data' => $essayObj->description));
    }

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create the ajax content for places in subjects
 */
function kmaps_explorer_subjects_places($type = 'ajax', $id, $page_num=1, $total_pages=1, $subpage=FALSE) {
  if($type == 'ajax') {
    $placesURL = "http://places.kmaps.virginia.edu/topics/" . $id . ".json?page=" . $page_num;
    $placesObj = json_decode(file_get_contents($placesURL));

    $page_num = $placesObj->page;
    $total_pages = $placesObj->total_pages;

    $output = theme('kmaps_explorer_subjects_places_ajax', array(
      'data' => $placesObj,
      'title' => variable_get('kmaps_explorer_node_title', ''),
    ));

    //create the pager input element
    $page_input_array = drupal_get_form('kmaps_explorer_text_field', $id, $page_num, $total_pages, 'places', 'subject');
    $input_el = render($page_input_array);

    $pageBaseUrl = base_path() . 'subjects/' . $id . '/places/nojs/';
    $pagination = theme('kmaps_explorer_pagination_template', array(
      'first_link' => $pageBaseUrl . '1/' . $total_pages,
      'previous_link' => $pageBaseUrl . ($page_num <= 1 ? '1' : ($page_num - 1)) . '/' . $total_pages,
      'next_link' => $pageBaseUrl . ($page_num >= $total_pages ? $total_pages : ($page_num + 1)) . '/' . $total_pages,
      'last_link' => $pageBaseUrl . $total_pages . '/' . $total_pages,
      'total_pages' => $total_pages,
      'page_num' => $page_num,
      'input_el' => $input_el,
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $commands[] = ajax_command_append('#tab-main', $pagination);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    if($subpage) {
      return $page;
    } else {  
      ajax_deliver($page);
    }
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create the ajax content for the places in places
 */
function kmaps_explorer_places_places($type = 'ajax', $id, $page_num = 1, $total_pages = 1, $subpage = FALSE) {
  if($type == 'ajax') {
    $placesURL = "http://places.kmaps.virginia.edu/features/" . $id . "/related.json";
    $placesObj = json_decode(file_get_contents($placesURL));
    
    $output = theme('kmaps_explorer_places_places_ajax', array(
      'data' => $placesObj,
      'title' => variable_get('kmaps_explorer_node_title', ''),
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    if($subpage) {
      return $page;
    } else {  
      ajax_deliver($page);
    }
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Initial function to create the lone text field for pager
 */
function kmaps_explorer_text_field($form, &$form_state, $id, $page_num, $total_pages, $related_assoc, $app = 'none') {
  $form['page_num_text'] = array(
    '#type' => 'textfield',
    '#value' => isset($form_state['input']['page_num_text']) ? $form_state['input']['page_num_text'] : $page_num,
    '#size' => 10,
    '#attributes' => array(
      'class' => array('page-input'),
      'data-arg' => $id . '-' . $total_pages . '-' . $related_assoc . '-' . $app,
    ),
    '#ajax' => array(
      'callback' => 'kmaps_explore_pager_ajax',
      'wrapper' => 'tab-main',
      'keypress' => TRUE,
      'progress' => array(
        'type' => 'throbber',
        'message' => NULL,
      ),
    ),
  );

  return $form;
}

/**
 * Function to handle the callback of the ajax pager input text field.
 */
function kmaps_explore_pager_ajax($form, &$form_state) {
  list($id, $total_pages, $related_assoc, $app) = explode('-', $form['page_num_text']['#attributes']['data-arg']);
  $page_num = $form_state['input']['page_num_text'];
  if ($related_assoc == 'places') {
    return kmaps_explorer_subjects_places('ajax', intval($id), intval($page_num), intval($total_pages), TRUE);
  }
  if ($related_assoc == 'photos') {
    return kmaps_explorer_subjects_photos('ajax', intval($id), intval($page_num), intval($total_pages), TRUE);
  }
  if ($related_assoc == 'audiovideo') {
    return kmaps_explorer_subjects_audio_video('ajax', intval($id), $app, intval($page_num), intval($total_pages), TRUE);
  }
}

/**
 * Function to create ajax content for photos in subjects
 */
function kmaps_explorer_subjects_photos($type = 'ajax', $id, $page_num=1, $total_pages=1, $subpage=FALSE) {
  if($type == 'ajax') {
    $photosURL = 'http://mms.thlib.org/topics/' . $id . '/pictures.json?per_page=30&page=' . $page_num;
    $photosObj = json_decode(file_get_contents($photosURL));

    $page_num = $photosObj->topic->page;
    $total_pages = $photosObj->topic->total_pages;

    $output = theme('kmaps_explorer_subjects_photos_ajax', array(
      'data' => $photosObj->topic->media,
      'title' => variable_get('kmaps_explorer_node_title', ''),
    ));

    //create the pager input element
    $page_input_array = drupal_get_form('kmaps_explorer_text_field', $id, $page_num, $total_pages, 'photos', 'subject');
    $input_el = render($page_input_array);

    $pageBaseUrl = base_path() . 'subjects/' . $id . '/photos/nojs/';
    $pagination = theme('kmaps_explorer_pagination_template', array(
      'first_link' => $pageBaseUrl . '1/' . $total_pages,
      'previous_link' => $pageBaseUrl . ($page_num <= 1 ? '1' : ($page_num - 1)) . '/' . $total_pages,
      'next_link' => $pageBaseUrl . ($page_num >= $total_pages ? $total_pages : ($page_num + 1)) . '/' . $total_pages,
      'last_link' => $pageBaseUrl . $total_pages . '/' . $total_pages,
      'total_pages' => $total_pages,
      'page_num' => $page_num,
      'input_el' => $input_el,
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $commands[] = ajax_command_append('#tab-main', $pagination);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    if($subpage) {
      return $page;
    } else {  
      ajax_deliver($page);
    }
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create ajax content for texts in subjects
 */
function kmaps_explorer_subjects_texts($type = 'ajax', $id, $page_num=1, $total_pages=1, $subpage=FALSE) {
  if($type == 'ajax') {
    $textsURL = 'http://mms.thlib.org/topics/' . $id . '/documents.json';
    $textsObj = json_decode(file_get_contents($textsURL));

    $output = theme('kmaps_explorer_subjects_texts_ajax', array(
      'data' => $textsObj->topic->media,
      'title' => variable_get('kmaps_explorer_node_title', ''),
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    if($subpage) {
      return $page;
    } else {  
      ajax_deliver($page);
    }
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create ajax content for audio-video in subjects
 */
function kmaps_explorer_subjects_audio_video($type = 'ajax', $id, $app, $page_num=1, $total_pages=1, $subpage=FALSE) {
  if($type == 'ajax') {
    $avURL = 'http://mediabase.drupal-dev.shanti.virginia.edu/services/' . $app . '/' . $id . '?rows=12&pg=' . $page_num;
    $avObj = json_decode(file_get_contents($avURL));

    $page_num = $avObj->page;
    $total_pages = intval($avObj->total / $avObj->rows);

    $output = theme('kmaps_explorer_subjects_audio_video_ajax', array(
      'data' => $avObj->media,
      'title' => variable_get('kmaps_explorer_node_title', ''),
    ));

    //create the pager input element
    $page_input_array = drupal_get_form('kmaps_explorer_text_field', $id, $page_num, $total_pages, 'audiovideo', $app);
    $input_el = render($page_input_array);

    $pageBaseUrl = base_path() . $app . 's/' . $id . '/audio-video/nojs/';
    $pagination = theme('kmaps_explorer_pagination_template', array(
      'first_link' => $pageBaseUrl . '1/' . $total_pages,
      'previous_link' => $pageBaseUrl . ($page_num <= 1 ? '1' : ($page_num - 1)) . '/' . $total_pages,
      'next_link' => $pageBaseUrl . ($page_num >= $total_pages ? $total_pages : ($page_num + 1)) . '/' . $total_pages,
      'last_link' => $pageBaseUrl . $total_pages . '/' . $total_pages,
      'total_pages' => $total_pages,
      'page_num' => $page_num,
      'input_el' => $input_el,
    ));

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $commands[] = ajax_command_append('#tab-main', $pagination);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    if($subpage) {
      return $page;
    } else {  
      ajax_deliver($page);
    }
  } else {
    return t("Please enable JavaScript to use this application.");
  }
}

/**
 * Function to create ajax content for audio-video individual node items
 */
function kmaps_explorer_audio_video_node($type = 'ajax', $id) {
  if($type == 'ajax') {
    $avNodeURL = 'http://mediabase.drupal-dev.shanti.virginia.edu/services/node/ajax/' . $id;
    $output = file_get_contents($avNodeURL);

    $commands = array();
    $commands[] = ajax_command_html('#tab-main', $output);
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
  } else {
    return t("Please enable JavaScript to use this application");
  }
}

/**
 * Recursive function to search for etymology from an object
 */
function search_etymology($obj) {
  foreach ($obj as $key => $value) {
    if (!empty($value->etymology)) {
      return array(
        'etymology_value' => $value->etymology,
        'name' => $value->name,
      );
    } else {
      search_etymology($value->names);
    }
  }
  return FALSE;
}